on:
  schedule:
    - cron:  '0 0,12 * * *'
  workflow_dispatch:

permissions:
  packages: write
  contents: read
  id-token: write

jobs:
  generate-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.generate-matrix.outputs.matrix }}
      matrix-unique-images: ${{ steps.generate-matrix.outputs.matrix-unique-images }}
    steps:
      - uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # v3.1.0
        with:
          repository: chainguard-images/images
          path: monopod-setup-gha
      - uses: actions/setup-go@v3
        with:
          go-version: 1.19
      - id: generate-matrix
        run: |
          set -x
          (cd monopod-setup-gha/monopod/ && go build -o /tmp/monopod monopod.go)
          cd monopod-setup-gha/
          modified_files=""
          echo "matrix=$(/tmp/monopod matrix --modified-files=${modified_files})" >> $GITHUB_OUTPUT
          cd ../
          rm -rf monopod-setup-gha/ /tmp/monopod
  apko:
    runs-on: ubuntu-latest
    outputs:
      commit: ${{ steps.apko-commit.outputs.commit }}
    steps:
      - uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # v3.1.0
        with:
          repository: chainguard-dev/apko
          ref: main
          path: apko
      - uses: actions/setup-go@6edd4406fa81c3da01a34fa6f6343087c207a568 # v2.1.5
        with:
          go-version: 1.19
          check-latest: true
      - name: apko commit
        id: apko-commit
        run: |
          echo "commit=$(/usr/bin/git -C ./apko log -1 --format='%H')" >> $GITHUB_OUTPUT
      - name: build
        run: |
          cd apko
          make apko
          ./apko version
      - name: cache the binary for later steps
        uses: actions/cache/save@v3
        with:
          path: ./apko/apko
          key: ${{ steps.apko-commit.outputs.commit }}

  build:
    runs-on: ubuntu-latest
    needs: [generate-matrix,apko]
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.generate-matrix.outputs.matrix) }}
    permissions:
      id-token: write
      packages: write
      contents: read
    steps:
      - name: Re-download images
        uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # v3.1.0
        with:
          repository: chainguard-images/images
      - name: 'Login to GHCR'
        run: |
          export DOCKER_CONFIG="docker-tmp"
          mkdir -p "${DOCKER_CONFIG}"
          echo '{}' > "${DOCKER_CONFIG}/config.json"
          docker login ghcr.io -u "${{ github.repository_owner }}" -p "${{ github.token }}"
      - name: recover the cached binary
        uses: actions/cache/restore@v3
        with:
          path: ./apko/apko
          key: ${{ needs.apko.outputs.commit }}
      - name: 'Build image with apko'
        id: build
        run: |
          set -x
          export DOCKER_CONFIG="docker-tmp"
          ./apko/apko build --debug \
            "${{ matrix.apkoConfig }}" \
            "${{ matrix.imageName }}:${{matrix.apkoTargetTag}}" \
            /tmp/output.tar

