on:
  workflow_dispatch:
    inputs:
      only:
        description: 'Specific image name to build (blank for all)'
        type: string
        required: false
        default: ''
      ref-a:
        description: 'apko ref A'
        type: string
        required: true
        default: 'v0.6.0'
      ref-b:
        description: 'apko ref B'
        type: string
        required: true
        default: 'main'
      namespace:
        description: 'namespace under ghcr.io/jdolitsky/apko-compare'
        type: string
        required: true
        default: 'testing'
permissions:
  packages: write
  contents: read
  id-token: write
jobs:
  generate-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.generate-matrix.outputs.matrix }}
      matrix-unique-images: ${{ steps.generate-matrix.outputs.matrix-unique-images }}
    steps:
      - uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # v3.1.0
        with:
          repository: chainguard-images/images
          path: monopod-setup-gha
      - uses: actions/setup-go@v3
        with:
          go-version: 1.19
      - id: generate-matrix
        run: |
          set -x
          (cd monopod-setup-gha/monopod/ && go build -o /tmp/monopod monopod.go)
          cd monopod-setup-gha/
          modified_files=""
          if [[ "${{ inputs.only }}" != "" ]]; then
            modified_files="images/${{ inputs.only }}/image.yaml"
          fi
          echo "matrix=$(/tmp/monopod matrix --modified-files=${modified_files})" >> $GITHUB_OUTPUT
          cd ../
          rm -rf monopod-setup-gha/ /tmp/monopod

  build:
    runs-on: ubuntu-latest
    needs: generate-matrix
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.generate-matrix.outputs.matrix) }}
    permissions:
      id-token: write
      packages: write
      contents: read
    steps:
      - name: 'Fetch apk-tools nightly'
        run: |
          sudo apt install -y unzip
          wget -O apk-tools-nightly.zip 'https://gitlab.alpinelinux.org/alpine/apk-tools/-/jobs/artifacts/2.12-stable/download?job=build-static:+[x86_64]'
          unzip apk-tools-nightly.zip 'src/apk.static-x86_64'
          sudo mv 'src/apk.static-x86_64' /sbin/apk
          rm -rf src apk-tools-nightly.zip
      - name: 'Set up apk-tools in overlay mode'
        run: |
          sudo apk add --initdb --root=/
          (cat <<_EOF_
          https://dl-cdn.alpinelinux.org/alpine/edge/main
          _EOF_
          ) | sudo tee /etc/apk/repositories
      - name: 'Fetch and install alpine keyring'
        run: |
          sudo apk update --allow-untrusted
          sudo apk add --allow-untrusted alpine-keys
      - uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # v3.1.0
        with:
          repository: chainguard-dev/apko
          ref: ${{ inputs.ref-a }}
          path: apko-a
      - uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # v3.1.0
        with:
          repository: chainguard-dev/apko
          ref: ${{ inputs.ref-b }}
          path: apko-b
      - name: 'Build both apkos'
        run: |
          (cd apko-a && make apko && mv apko /tmp/apko-a && /tmp/apko-a version)
          (cd apko-b && make apko && mv apko /tmp/apko-b && /tmp/apko-b version)
          rm -rf apko-a apko-b
      - name: Re-download images
        uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # v3.1.0
        with:
          repository: chainguard-images/images
      - name: 'Login to GHCR'
        run: |
          docker login ghcr.io -u "${{ github.repository_owner }}" -p "${{ github.token }}"
      - name: 'Build image with apko-a'
        run: |
          set -x
          sudo /tmp/apko-a publish --debug \
            "${{ matrix.apkoConfig }}" \
            "ghcr.io/jdolitsky/apko-compare/${{inputs.namespace}}/apko-a/${{matrix.imageName}}:${apkoTargetTag}"
      - name: 'Build image with apko-b'
        run: |
          set -x
          sudo /tmp/apko-b publish --debug \
            "${{ matrix.apkoConfig }}" \
            "ghcr.io/jdolitsky/apko-compare/${{inputs.namespace}}/apko-b/${{matrix.imageName}}:${apkoTargetTag}"
