on:
  workflow_dispatch:
    inputs:
      only:
        description: 'Specific image name to build (blank for all)'
        type: string
        required: false
        default: ''
      repo-a:
        description: 'apko repo A'
        type: string
        required: true
        default: 'chainguard-dev/apko'
      ref-a:
        description: 'apko ref A (default was version being used for a while)'
        type: string
        required: true
        default: 'cf9e6f264bcf38fd8ebbd95fb6a954cce5d16b57'
      repo-b:
        description: 'apko repo B'
        type: string
        required: true
        default: 'chainguard-dev/apko'
      ref-b:
        description: 'apko ref B'
        type: string
        required: true
        default: 'main'
      namespace:
        description: 'namespace under ghcr.io/jdolitsky/apko-compare'
        type: string
        required: true
        default: 'testing'
permissions:
  packages: write
  contents: read
  id-token: write
jobs:
  generate-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.generate-matrix.outputs.matrix }}
      matrix-unique-images: ${{ steps.generate-matrix.outputs.matrix-unique-images }}
    steps:
      - uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # v3.1.0
        with:
          repository: chainguard-images/images
          path: monopod-setup-gha
      - uses: actions/setup-go@v3
        with:
          go-version: 1.19
      - id: generate-matrix
        run: |
          set -x
          (cd monopod-setup-gha/monopod/ && go build -o /tmp/monopod monopod.go)
          cd monopod-setup-gha/
          modified_files=""
          if [[ "${{ inputs.only }}" != "" ]]; then
            modified_files="images/${{ inputs.only }}/image.yaml"
          fi
          echo "matrix=$(/tmp/monopod matrix --modified-files=${modified_files})" >> $GITHUB_OUTPUT
          cd ../
          rm -rf monopod-setup-gha/ /tmp/monopod

  build:
    runs-on: ubuntu-latest
    needs: generate-matrix
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.generate-matrix.outputs.matrix) }}
    permissions:
      id-token: write
      packages: write
      contents: read
    steps:
      - uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # v3.1.0
        with:
          repository: ${{ inputs.repo-a }}
          ref: ${{ inputs.ref-a }}
          path: apko-a
      - uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # v3.1.0
        with:
          repository: ${{ inputs.repo-b }}
          ref: ${{ inputs.ref-b }}
          path: apko-b
      - name: 'Build both apkos'
        run: |
          cat >./Dockerfile.a <<EOL
          FROM ghcr.io/wolfi-dev/sdk:latest
          COPY apko-a /tmp/build-me
          RUN cd /tmp/build-me && make apko install && apko version
          EOL

          docker build -f Dockerfile.a -t apko-a:latest .
          docker run --rm --entrypoint apko apko-a:latest version

          cat >./Dockerfile.b <<EOL
          FROM ghcr.io/wolfi-dev/sdk:latest
          COPY apko-b /tmp/build-me
          RUN cd /tmp/build-me && make apko install && apko version
          EOL

          docker build -f Dockerfile.b -t apko-b:latest .
          docker run --rm --entrypoint apko apko-b:latest version

          rm -rf apko-a apko-b
      - name: Re-download images
        uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # v3.1.0
        with:
          repository: chainguard-images/images
      - name: 'Login to GHCR'
        run: |
          export DOCKER_CONFIG="docker-tmp"
          mkdir -p "${DOCKER_CONFIG}"
          echo '{}' > "${DOCKER_CONFIG}/config.json"
          docker login ghcr.io -u "${{ github.repository_owner }}" -p "${{ github.token }}"
      - name: 'Build image with apko-a'
        run: |
          set -x
          docker run --rm -v "${PWD}:/work" -e DOCKER_CONFIG="/work/docker-tmp" \
            --entrypoint apko apko-a:latest publish --debug \
            "${{ matrix.apkoConfig }}" \
            "ghcr.io/jdolitsky/apko-compare/${{inputs.namespace}}/apko-a/${{matrix.imageName}}:${{matrix.apkoTargetTag}}"
      - name: 'Build image with apko-b'
        run: |
          set -x
          docker run --rm -v "${PWD}:/work" -e DOCKER_CONFIG="/work/docker-tmp" \
            --entrypoint apko apko-b:latest publish --debug \
            "${{ matrix.apkoConfig }}" \
            "ghcr.io/jdolitsky/apko-compare/${{inputs.namespace}}/apko-a/${{matrix.imageName}}:${{matrix.apkoTargetTag}}"
