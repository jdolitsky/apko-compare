on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      only:
        description: 'Specific image name to build (blank for all)'
        type: string
        required: false
        default: ''
      commit-a:
        description: 'apko commit A'
        type: string
        required: true
        default: 'v0.6.0'
      commit-b:
        description: 'apko commit B'
        type: string
        required: true
        default: 'main'
      namespace:
        description: 'namespace under ghcr.io/jdolitsky/apko-compare'
        type: string
        required: true
        default: 'ghcr.io/jdolitsky/apko-compare/testing'
permissions:
  packages: write
  contents: read
  id-token: write
jobs:
  generate-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.generate-matrix.outputs.matrix }}
      matrix-unique-images: ${{ steps.generate-matrix.outputs.matrix-unique-images }}
    steps:
      # Checkout public repo to get actions
      - uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # v3.1.0
        with:
          repository: chainguard-images/images

      # For manual builds, build only the image requested
      - id: generate-matrix-manual
        if: ${{ github.event_name == 'workflow_dispatch' && inputs.only != '' }}
        uses: ./.github/actions/generate-matrix
        with:
          repository: chainguard-images/images
          modified-files: images/${{ inputs.only }}/image.yaml

      # Generate the final matrix for build based on the above
      - id: generate-matrix
        run: |
          set -x
          trap "rm -f matrix.json matrix-unique-images.json" EXIT
          echo '${{ steps.generate-matrix-manual.outputs.matrix }}' > matrix.json
          echo "matrix=$(cat matrix.json)" >> $GITHUB_OUTPUT
          echo '${{ steps.generate-matrix-manual.outputs.matrix-unique-images }}' > matrix-unique-images.json
          echo "matrix-unique-images=$(cat matrix-unique-images.json)" >> $GITHUB_OUTPUT

  build:
    runs-on: ubuntu-latest
    needs: generate-matrix
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.generate-matrix.outputs.matrix) }}
    permissions:
      id-token: write
      packages: write
      contents: read
    steps:
      - uses: ./.github/actions/release-image
        run: |
          echo '${{ matrix }}'
