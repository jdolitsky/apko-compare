on:
  workflow_dispatch:
    inputs:
      only:
        description: 'Specific image name to build, e.g. "wait-for-it" or "go" (blank for all from https://github.com/chainguard-images/images)'
        type: string
        required: false
        default: ''
      repo:
        description: 'apko repo'
        type: string
        required: true
        default: 'chainguard-dev/apko'
      ref:
        description: 'apko ref, can be commit or tag'
        type: string
        required: true
        default: 'main'
      namespace:
        description: 'namespace under ghcr.io/<org>/<repo>'
        type: string
        required: true
        default: 'testing'
      comparebase:
        description: 'base for images to compare to (optional), e.g. cgr.dev/chainguard; name and tag will be appended; "date" will be taken literally, e.g. 20230222'
        type: string
        required: false
      compareappendtag:
        description: 'string to add to tag of compared images, e.g. 20230222; if blank, will be ignored. Has no meaning if comparebase is blank'
        type: string
        required: false
permissions:
  packages: write
  contents: read
  id-token: write
jobs:
  get-time:
    runs-on: ubuntu-latest
    outputs:
      time: ${{ steps.current-time.outputs.formattedTime }}
    steps:
      - name: Get current time
        uses: josStorer/get-current-time@v2
        id: current-time
        with:
          format: YYYYMMDD-HHMMSS
  generate-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.generate-matrix.outputs.matrix }}
      matrix-unique-images: ${{ steps.generate-matrix.outputs.matrix-unique-images }}
    steps:
      - uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # v3.1.0
        with:
          repository: chainguard-images/images
          path: monopod-setup-gha
      - uses: actions/setup-go@v3
        with:
          go-version: 1.19
      - id: generate-matrix
        run: |
          set -x
          (cd monopod-setup-gha/monopod/ && go build -o /tmp/monopod monopod.go)
          cd monopod-setup-gha/
          modified_files=""
          if [[ "${{ inputs.only }}" != "" ]]; then
            modified_files="images/${{ inputs.only }}/image.yaml"
          fi
          echo "matrix=$(/tmp/monopod matrix --modified-files=${modified_files})" >> $GITHUB_OUTPUT
          cd ../
          rm -rf monopod-setup-gha/ /tmp/monopod
  apko:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # v3.1.0
        with:
          repository: ${{ inputs.repo }}
          ref: ${{ inputs.ref }}
          path: apko
      - uses: actions/setup-go@6edd4406fa81c3da01a34fa6f6343087c207a568 # v2.1.5
        with:
          go-version: 1.19
          check-latest: true
      - name: build
        run: |
          cd apko
          make apko
          ./apko version
      - name: cache the binary for later steps
        uses: actions/cache/save@v3
        with:
          path: ./apko/apko
          key: ${{ github.sha }}

  build:
    runs-on: ubuntu-latest
    needs: [generate-matrix,get-time,apko]
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.generate-matrix.outputs.matrix) }}
    permissions:
      id-token: write
      packages: write
      contents: read
    steps:
      - name: Re-download images
        uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # v3.1.0
        with:
          repository: chainguard-images/images
      - name: 'Login to GHCR'
        run: |
          export DOCKER_CONFIG="docker-tmp"
          mkdir -p "${DOCKER_CONFIG}"
          echo '{}' > "${DOCKER_CONFIG}/config.json"
          docker login ghcr.io -u "${{ github.repository_owner }}" -p "${{ github.token }}"
      - name: recover the cached binary
        uses: actions/cache/restore@v3
        with:
          path: ./apko/apko
          key: ${{ github.sha }}
      - name: 'Build image with apko'
        id: build
        run: |
          set -x
          export DOCKER_CONFIG="docker-tmp"
          image="ghcr.io/${{ github.repository }}/${{inputs.namespace}}/apko/${{matrix.imageName}}:${{matrix.apkoTargetTag}}-${{ needs.get-time.outputs.time }}"
          ./apko/apko publish --debug \
            "${{ matrix.apkoConfig }}" \
            "$image"
          echo "image=${image}" >> $GITHUB_OUTPUT
      ## Write for matrix outputs workaround 
      - uses: cloudposse/github-action-matrix-outputs-write@main
        id: out
        with:
          matrix-step-name: ${{ github.job }}
          matrix-key: ${{ matrix.apkoConfig }}
          outputs: |-
            image: ${{ steps.build.outputs.image }}

    ## Read matrix outputs 
  report:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: cloudposse/github-action-matrix-outputs-read@main
        id: read
        with:
          matrix-step-name: build
      - name: install jq
        run: |
          sudo apt-get update
          sudo apt-get install jq
      - id: images
        name: List images
        run: |
          cat <<EOF | jq -r '.image | to_entries[] | .value'
          ${{ steps.read.outputs.result }}
          EOF

  compare:
    runs-on: ubuntu-latest
    needs: [get-time,generate-matrix,build]
    if: inputs.comparebase != ''
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.generate-matrix.outputs.matrix) }}
    steps:
      - name: checkout
        uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # v3.1.0
      - uses: actions/setup-go@6edd4406fa81c3da01a34fa6f6343087c207a568 # v2.1.5
        with:
          go-version: 1.19
          check-latest: true
      - id: outputdir
        name: Output Directory
        run: |
          OUTDIR=${RUNNER_TEMP}/results
          mkdir -p $OUTDIR
          echo "outputdir=${OUTDIR}" >> $GITHUB_OUTPUT
      - id: compare
        name: Compare
        run: |
           cd comparer
           APPEND_TAG=${{ inputs.compareappendtag }}
           [ -n "$APPEND_TAG" ] && APPEND_TAG="-${APPEND_TAG}"
           go run . ${{ inputs.comparebase }}/${{ matrix.imageName}}:${{ matrix.apkoTargetTag }}${APPEND_TAG} ghcr.io/${{ github.repository }}/${{inputs.namespace}}/apko/${{matrix.imageName}}:${{matrix.apkoTargetTag}}-${{ needs.get-time.outputs.time }} --debug --ignore-timestamps --ignore-missing-image --save-file-pattern ${{ steps.outputdir.outputs.outputdir }}/compare-IMAGE-PLATFORM.txt
      - name: Upload comparison files
        uses: actions/upload-artifact@v3
        with:
          name: results
          path: ${{ steps.outputdir.outputs.outputdir }}/*

